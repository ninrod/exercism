// setup ----------------------------------------
def versions = new Expando()
def deps = new Expando()
ext.versions = versions
ext.deps = deps

// versions -------------------------------------
versions.kotlin = "1.3.21"
versions.exposed = "0.13.3"
versions.postgre = "42.2.5"
versions.jfrog = "4.9.0"
versions.ktor = "1.1.3"
versions.logback = "1.2.3"
versions.slf4j = "1.7.26"

versions.junit = "5.4.1"
versions.kluent = "1.47"

// dependencies -------------------------------------

deps.exposed = "org.jetbrains.exposed:spring-transaction:${versions.exposed}"
deps.postgre = "org.postgresql:postgresql:${versions.postgre}"
deps.jfrog  = "org.jfrog.buildinfo:build-info-extractor-gradle:${versions.jfrog}"
deps.kluent = "org.amshove.kluent:kluent:${versions.kluent}"
deps.kotlin = [
    plugin  : "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}",
    stdlib  : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}",
    reflect : "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}"
]
deps.junit = [
    api    : "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
    engine : "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
    vintage: "org.junit.vintage:junit-vintage-engine:${versions.junit}"
]
deps.ktor = [
    core      : "io.ktor:ktor-server-core:${versions.ktor}",
    netty     : "io.ktor:ktor-server-netty:${versions.ktor}",
    gson      : "io.ktor:ktor-gson:${versions.ktor}",
    jwt       : "io.ktor:ktor-auth-jwt:${versions.ktor}",
    logback   : "ch.qos.logback:logback-classic:${versions.logback}",
    test : [
        core : "io.ktor:ktor-server-tests:${versions.ktor}",
        host : "io.ktor:ktor-server-test-host:${versions.ktor}"
    ]
]
