apply from: "$rootDir/functions.gradle"
apply from: "$rootDir/versions.gradle"
apply from: "$rootDir/configs.gradle"

buildscript {
  apply from: "$rootDir/functions.gradle"
    apply from: "$rootDir/versions.gradle"
    apply from: "$rootDir/configs.gradle"
    repositories {
      if (doWeHaveToUseArtifactory())
        maven { url(configs.artifactory) }
      else {
        jcenter()
          maven { url (configs.ktor) }
      }
    }
  dependencies {
    if (doWeHaveToUseArtifactory())
      classpath(deps.jfrog)
        classpath(deps.kotlin.plugin)
  }
}


allprojects {

  apply plugin: "kotlin"
    apply plugin: "application"

    group = "org.ninrod.exercism"
    version = "0.0.1"
    sourceCompatibility = 1.8
    mainClassName = "org.ninrod.blog.MainKt"

    compileKotlin {
      kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
          jvmTarget = "1.8"
      }
    }
  compileTestKotlin {
    kotlinOptions {
      freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
  }

  repositories {
    if (doWeHaveToUseArtifactory())
      maven { url (configs.artifactory) }
    else {
      jcenter()
        maven { url (configs.ktor) }
    }
  }

  test {
    useJUnitPlatform()
  }

  dependencies {
    compile(deps.kotlin.stdlib)
      compile(deps.kotlin.reflect)

      testCompile(deps.junit.api)
      testCompile(deps.junit.jupiter)
      testCompile(deps.kluent)
      testCompile(deps.junit.vintage)
      testRuntimeOnly(deps.junit.engine)
  }

  jar {
    manifest {
      attributes 'Main-Class': "org.ninrod.blog.MainKt"
    }
    from {
      configurations.compile.collect {
        it.isDirectory() ? it : zipTree(it)
      }
    }
  }
}
